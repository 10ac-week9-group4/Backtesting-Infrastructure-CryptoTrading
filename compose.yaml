services:
  # Kafka and Faust- stream processing
  zookeeper:
    image: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181


  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9093:9093'
      - '9094:9094'
    environment:
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@<your_host>:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  api:
    build: ./api
    volumes:
      - ./api/app:/code/app
    depends_on:
      - kafka
    ports:
      - "8000:80"
    environment:
    - KAFKA_BROKER_URL=kafka://kafka:9092

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  data-pipeline:
    build: ./data_pipeline  # The Dockerfile is in this directory
    volumes:
      - ./data_pipeline:/app
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_HOST: postgres
      POSTGRES_DB: trading_data
      POSTGRES_PASSWORD: postgres  

volumes:
  postgres: