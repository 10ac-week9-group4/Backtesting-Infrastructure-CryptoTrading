"""Add current time field to backtest results table

Revision ID: 5c93e85e8c7d
Revises: e36456dd84e4
Create Date: 2024-06-25 15:25:17.637092

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c93e85e8c7d'
down_revision: Union[str, None] = 'e36456dd84e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('fact_backtests', sa.Column('CurrentTime', sa.DateTime(), nullable=True))
    op.drop_constraint('fact_backtests_DateKey_fkey', 'fact_backtests', type_='foreignkey')
    op.drop_column('fact_backtests', 'DateKey')
    op.drop_constraint('fact_trades_DateKey_fkey', 'fact_trades', type_='foreignkey')
    op.drop_column('fact_trades', 'DateKey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('fact_trades', sa.Column('DateKey', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fact_trades_DateKey_fkey', 'fact_trades', 'dim_date', ['DateKey'], ['DateKey'])
    op.add_column('fact_backtests', sa.Column('DateKey', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fact_backtests_DateKey_fkey', 'fact_backtests', 'dim_date', ['DateKey'], ['DateKey'])
    op.drop_column('fact_backtests', 'CurrentTime')
    # ### end Alembic commands ###
